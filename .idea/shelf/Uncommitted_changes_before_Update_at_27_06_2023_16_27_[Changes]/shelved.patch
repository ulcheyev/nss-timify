Index: frontend/src/pages/auth.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/pages/auth.js b/frontend/src/pages/Auth.js
rename from frontend/src/pages/auth.js
rename to frontend/src/pages/Auth.js
--- a/frontend/src/pages/auth.js	
+++ b/frontend/src/pages/Auth.js	
@@ -1,43 +1,54 @@
-import {useRef, useState, useEffect, Component} from "react";
+import {useState, useEffect, useContext} from "react";
 import axios from 'axios';
 import UserService from '../services/user.service'
 import {LogUser} from "../models/logUser";
 import {RegUser} from "../models/regUser";
+import {useHistory, useLocation} from "react-router-dom";
+import {TODO_ROUTE} from "../utils/consts";
+import {Context} from "../index";
+import {observer} from "mobx-react-lite";
 
 const USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;
 const PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;
 
 
-const Auth = () => {
-
-    const [user, setUser] = useState('');
+const Auth = observer(() => {
+    const location = useLocation()
+    const history = useHistory()
+    const {user} = useContext(Context)
+    const [username, setUsername] = useState('');
     const [pwd, setPwd] = useState('');
     const [email, setEmail] = useState('');
-    const [success, setSuccess] = useState(false);
+    //const [success, setSuccess] = useState(false);
 
     const register = (e) => {
         e.preventDefault();
-        UserService.register(new RegUser(user, pwd, email)).then(res=>{
-            try {
+        UserService.register(new RegUser(username, pwd, email)).then(res=>{
                 console.log(res.data.token)
-                setSuccess(true)
-            }catch (err){
-                console.log(res.response.data.message)
-                setSuccess(false)
-            }
-        })
+                user.setUser(user)
+                user.setToken(res.data.token)
+                user.setIsAuth(true)
+                history.push(TODO_ROUTE)
+       })
+       .catch (err => {
+                alert(err.response.data.message)
+       })
     }
 
     const login = (e) => {
         e.preventDefault();
-        UserService.login(new LogUser(user, pwd)).then(res=>{
-            try {
-                console.log(res.data.token)
-                setSuccess(true)
-            }catch (err){
-                console.log(res.response.data.message)
-                setSuccess(false)
-            }
+        UserService.login(new LogUser(username, pwd)).then(res=>{
+            console.log(res.data.token)
+            user.setUser(user)
+            user.setToken(res.data.token)
+            user.setIsAuth(true)
+            console.log(history)
+            history.push(TODO_ROUTE)
+            console.log(history)
+        })
+        .catch (err => {
+            console.log(err)
+            console.log(err.response.data.message)
         })
     }
 
@@ -60,17 +71,10 @@
 
 
     return (
-        <>
-            {(success ? (
-                <section>
-                    <h1>Стоматолог: - Не бойся Серёга, все бывает в первый раз!
-                        Пациент: - Я не Серёга.
-                        Стоматолог: - Я знаю. Серёга это я... </h1>
-                </section>):(
-                <div className="container">
+                <div className="login-container">
 
                     <div className="slider"></div>
-                    <div className="btn">
+                    <div className="slider-btn">
                         <button className="login">Login</button>
                         <button className="signup">Signup</button>
                     </div>
@@ -81,7 +85,7 @@
                             <input type="username"
                                    className="username ele"
                                    placeholder="Username"
-                                   onChange={(e) => setUser(e.target.value)}
+                                   onChange={(e) => setUsername(e.target.value)}
                                    required/>
                             <input type="password"
                                    className="password ele"
@@ -95,7 +99,7 @@
                             <input type="text"
                                    className="name ele"
                                    placeholder="Username"
-                                   onChange={(e) => setUser(e.target.value)}
+                                   onChange={(e) => setUsername(e.target.value)}
                                    required/>
                             <input type="email"
                                    className="email ele"
@@ -115,12 +119,9 @@
                         </form>
                     </div>
                 </div>
-
-            ))}
-        </>
         )
 
-}
+});
 
 
 export default Auth
\ No newline at end of file
